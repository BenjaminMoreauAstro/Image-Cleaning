name: Python Testing Integration Template

#Example how to use:
# jobs:
#   test-with-specific-branches:
#     uses: casangi/toolviper/.github/workflows/test-integration-template.yml@main
#     with:
#       toolviper_ref: 'v1.0.0' #optional, default main
#       xradio_ref: 'dev' #optional, default main
#       graphviper_ref: 'release-candidate' #optional, default main
#       astroviper_ref: 'main' #optional, default main

on:
  workflow_call:
    inputs:
      toolviper_ref:
        description: "Branch or tag for ToolVIPER"
        required: false
        default: "main"
        type: string
      xradio_ref:
        description: "Branch or tag for XRADIO"
        required: false
        default: "main"
        type: string
      graphviper_ref:
        description: "Branch or tag for GraphVIPER"
        required: false
        default: "main"
        type: string
      astroviper_ref:
        description: "Branch or tag for AstroVIPER"
        required: false
        default: "main"
        type: string
    secrets:
      DISPATCH_TOKEN:
        required: true

jobs:
  test-all:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout calling repository (PR version)
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install core test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Clone and install ToolVIPER
        run: |
          if [ ! -d "../toolviper" ]; then
            ORIGINAL_DIR=$(pwd)
            cd ..
            git clone --branch "${{ inputs.toolviper_ref }}" https://github.com/casangi/toolviper.git
            pip install -e toolviper
            cd "$ORIGINAL_DIR"
          fi

      - name: Clone and install XRADIO
        run: |
          if [ ! -d "../xradio" ]; then
            ORIGINAL_DIR=$(pwd)
            cd ..
            git clone --branch "${{ inputs.xradio_ref }}" https://github.com/casangi/xradio.git
            pip install -e "xradio[all]"
            cd "$ORIGINAL_DIR"
          fi

      - name: Clone and install GraphVIPER
        run: |
          if [ ! -d "../graphviper" ]; then
            ORIGINAL_DIR=$(pwd)
            cd ..
            git clone --branch "${{ inputs.graphviper_ref }}" https://github.com/casangi/graphviper.git
            pip install -e "graphviper[all]"
            cd "$ORIGINAL_DIR"
          fi

      - name: Clone and install AstroVIPER
        run: |
          if [ ! -d "../astroviper" ]; then
            ORIGINAL_DIR=$(pwd)
            cd ..
            git clone --branch "${{ inputs.astroviper_ref }}" https://github.com/casangi/astroviper.git
            pip install -e "astroviper[all]"
            cd "$ORIGINAL_DIR"
          fi

      - name: Install PR Package
        run: |
          pip install -e ".[all]"

      - name: Run ToolVIPER tests
        run: |
          if [ "${{ github.repository }}" = "casangi/toolviper" ]; then
            pytest tests
            pytest tests_integration
          else
            pytest ../toolviper/tests
            pytest ../toolviper/tests_integration
          fi

      - name: Run XRADIO tests
        run: |
          if [ "${{ github.repository }}" = "casangi/xradio" ]; then
            pytest tests
          else
            pytest ../xradio/tests
          fi

      - name: Run GraphVIPER tests
        run: |
          if [ "${{ github.repository }}" = "casangi/graphviper" ]; then
            pytest tests
          else
            pytest ../graphviper/tests
          fi

      - name: Run AstroVIPER tests
        run: |
          if [ "${{ github.repository }}" = "casangi/astroviper" ]; then
            pytest tests
          else
            pytest ../astroviper/tests
          fi

  dispatch-integration-tests:
    runs-on: ubuntu-latest
    needs: test-all
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Log dispatch attempt
      run: |
        echo "üöÄ Preparing to send repository dispatch to testviper..."
        echo "üì¶ Repository: ${{ github.repository }}"
        echo "üåø Branch: ${{ github.ref }}"
        echo "üîë Commit: ${{ github.sha }}"
        echo "üë§ Actor: ${{ github.actor }}"
        echo "‚öôÔ∏è  Workflow: ${{ github.workflow }}"
        echo "üÜî Run ID: ${{ github.run_id }}"
        echo "üî¢ Run Number: ${{ github.run_number }}"
    
    - name: Repository Dispatch to testviper
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.DISPATCH_TOKEN }}
        script: |
          const payload = {
            event_type: 'integration-test-trigger',
            client_payload: {
              repository: '${{ github.repository }}',
              ref: '${{ github.ref }}',
              sha: '${{ github.sha }}',
              actor: '${{ github.actor }}',
              workflow: '${{ github.workflow }}',
              run_id: '${{ github.run_id }}',
              run_number: '${{ github.run_number }}'
            }
          };
          
          // Send repository dispatch to target repository
          await github.rest.repos.createDispatchEvent({
            owner: 'casangi',
            repo: 'testviper',
            event_type: payload.event_type,
            client_payload: payload.client_payload
          });
          
          // Note: repository_dispatch is repository-wide and not branch-specific.

          console.log('Repository dispatch sent successfully to testviper');
    
    - name: Log dispatch success
      run: |
        echo "‚úÖ Repository dispatch sent successfully to testviper!"
        echo "üìã Event type: integration-test-trigger"
        echo "üéØ Target: casangi/testviper (branch: main)"
        echo "üìù Check testviper Actions tab for integration test execution"


# jobs:
#   test-all:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         python-version: [3.12]

#     steps:
#       - name: 1. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd
#           ls -al

#       - name: Checkout calling repository (PR version)
#         uses: actions/checkout@v4

#       - name: 2. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install core test dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install pytest

#       - name: 3. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd

#       # For debugging
#       # - name: Print Statements
#       #   run: |
#       #      echo "1 github.repository_owner=casangi"
#       #      echo "2 github.repository=${{ github.repository }}"
#       #      echo "3 casangi/toolviper"

#       # 1. If no ToolVIPER install from main
#       - name: Clone and install ToolVIPER (main)
#         if: github.repository != 'casangi/toolviper'
#         run: |
#           ORIGINAL_DIR=$(pwd)
#           cd ..
#           git clone https://github.com/casangi/toolviper.git
#           pip install -e toolviper
#           cd "$ORIGINAL_DIR"

#       - name: 4. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd
#           ls -al

#       # 2. If no XRADIO install from main
#       - name: Clone and install XRADIO (main)
#         if: github.repository != 'casangi/xradio'
#         run: |
#           ORIGINAL_DIR=$(pwd)
#           cd ..
#           git clone https://github.com/casangi/xradio.git
#           pip install -e xradio
#           cd "$ORIGINAL_DIR"

#       # 3. If no GraphVIPER install from main
#       - name: Clone and install GraphVIPER (main)
#         if: github.repository != 'casangi/graphviper'
#         run: |
#           ORIGINAL_DIR=$(pwd)
#           cd ..
#           git clone https://github.com/casangi/graphviper.git
#           pip install -e graphviper
#           cd "$ORIGINAL_DIR"

#       # 4. If no AstroVIPER install from main
#       - name: Clone and install AstroVIPER (main)
#         if: github.repository != 'casangi/astroviper'
#         run: |
#           ORIGINAL_DIR=$(pwd)
#           cd ..
#           git clone https://github.com/casangi/astroviper.git
#           pip install -e astroviper
#           cd "$ORIGINAL_DIR"

#       - name: 5. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd
#           ls -al

#       - name: Install PR Package
#         run: |
#           pip install -e .

#       - name: 6. Show working directory
#         run: |
#           echo "Current working directory:"
#           pwd
#           ls -al

#       # - name: Debug ToolVIPER install
#       #   run: |
#       #     python -c "import toolviper; print(dir(toolviper))"
#       #     pip list | grep toolviper
#       #     find $(python -c 'import toolviper; import os; print(os.path.dirname(toolviper.__file__))')

#       # 5. Run tests
#       - name: Run ToolVIPER tests
#         run: |
#           if [ "${{ github.repository }}" = "casangi/toolviper" ]; then
#             pytest tests
#             pytest tests_integration
#           else
#             pytest ../toolviper/tests
#             pytest ../toolviper/tests_integration
#           fi

#       - name: Run XRADIO tests
#         run: |
#           if [ "${{ github.repository }}" = "casangi/xradio" ]; then
#             pytest tests
#           else
#             pytest ../xradio/tests
#           fi

#       - name: Run GraphVIPER tests
#         run: |
#           if [ "${{ github.repository }}" = "casangi/graphviper" ]; then
#             pytest tests
#           else
#             pytest ../graphviper/tests
#           fi

#       - name: Run AstroVIPER tests
#         run: |
#           if [ "${{ github.repository }}" = "casangi/astroviper" ]; then
#             pytest tests
#           else
#             pytest ../astroviper/tests
#           fi

