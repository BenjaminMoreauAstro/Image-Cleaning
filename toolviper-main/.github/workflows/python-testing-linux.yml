# .github/workflows/python-testing-linux.yml
name: Linux Tests

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.rst'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'

jobs:
  # check-codecov-token:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check CODECOV_TOKEN
  #       run: echo "CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}"

  call-testing-linux:
    uses: casangi/toolviper/.github/workflows/python-testing-linux-template.yml@main
    with:
      cov_project: "toolviper"
      test-path: "tests/"
      python-versions: '["3.11", "3.12", "3.13"]'
    secrets: inherit


#This is now in a template

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions.

# on:
#   push:
#     paths-ignore:
#       - '**.md'
#       - '**.rst'
#   pull_request:
#     paths-ignore:
#       - '**.md'
#       - '**.rst'

# jobs:
#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         python-version: ["3.11", "3.12", "3.13"]
#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Python 3
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install dependencies with pip
#       run: |
#         python -m pip install --upgrade pip
#         pip install .  # install your package
#         pip install pytest-cov
#     - name: Test with pytest
#       run: |
#         pytest -v tests/ \
#         --html=test-results.html --self-contained-html \
#         --cov=toolviper --no-cov-on-fail \
#         --cov-report=html --cov-report=xml --doctest-modules \
#         --junitxml=junit.xml -o junit_family=legacy

#     - name: Upload pytest test results and coverage reports
#       uses: actions/upload-artifact@v4
#       with:
#         name: pytest-results-${{ matrix.python-version }}
#         path: |
#           ./test-results.html
#           ./htmlcov
#       # Use always() to always run this step to publish test results when there are test failures
#       if: ${{ always() }}

#     # - name: Check CODECOV_TOKEN
#     #   run: echo "CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}"

#     - name: Upload code coverage results to Codecov
#       uses: codecov/codecov-action@v5
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}  # Use the passed token from workflow_call
#         slug: ${{ github.repository }}

#     - name: Upload test stats to Codecov
#       if: ${{ !cancelled() }}
#       uses: codecov/test-results-action@v1
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         slug: casangi/graphviper